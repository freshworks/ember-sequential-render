{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"@freshworks/ember-sequential-render","attributes":{"name":"@freshworks/ember-sequential-render","version":"1.1.0","navigationIndex":[{"type":"components","items":[{"id":"@freshworks/ember-sequential-render/components/sequential-render","path":"components/sequential-render","name":"{{sequential-render}}"}]},{"type":"services","items":[{"id":"@freshworks/ember-sequential-render/services/render-states","path":"services/render-states","name":"RenderStates"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"@freshworks/ember-sequential-render/components/sequential-render"},{"type":"module","id":"@freshworks/ember-sequential-render/services/render-states"}]}}},"included":[{"type":"component","id":"@freshworks/ember-sequential-render/components/sequential-render~sequential-render","attributes":{"name":"sequential-render","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>A composable container component that prioritizes and queues the data fetch and the rendering of its content with the necessary loading states</p>\n<p>  Sample usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhandlebars\"><span class=\"xml\">    </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">sequential</span>-render\n      renderPriority=1\n      context=pageContext\n      taskName='fetchPrimaryContent'\n      fetchDataTask=fetchPrimaryContent\n      queryParams=queryParams\n      renderCallback=(action 'contentRenderCallback') as |renderHash|\n    }}</span><span class=\"xml\">\n      </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">renderHash</span>.loader-state}}</span><span class=\"xml\">\n        // Handle loading state if required\n      </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">renderHash</span>.loader-state}}</span><span class=\"xml\">\n      </span><span class=\"hljs-template-tag\">{{#<span class=\"hljs-name\">renderHash</span>.render-content loaderClass=\"loader-fade\"}}</span><span class=\"xml\">\n        // Use renderHash.content to render the content\n        // Use renderHash.isContentLoading to act based on the data loading state\n      </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">renderHash</span>.render-content}}</span><span class=\"xml\">\n    </span><span class=\"hljs-template-tag\">{{/<span class=\"hljs-name\">sequential</span>-render}}</span></code></pre></div>","lineNumber":11,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[{"name":"context","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>The primary context of the task, i.e., the dynamicSegment of the route.</p></div>","lineNumber":71,"access":"public","tags":[],"type":"any","isStatic":false,"decorators":[]},{"name":"taskName","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>The unique name of the task.</p></div>","lineNumber":79,"access":"public","tags":[{"name":"required","value":1}],"type":"string","isStatic":false,"decorators":[]},{"name":"renderPriority","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>Starts from 0, with 0 being a critical priority task that needs to be executed first. Priorities need not be sequential. \nSo sequential-render blocks can be used conditionally with no extra effort.\nrenderPriority can be conditional. But we do not recommend modifying priority midway.</p></div>","lineNumber":88,"access":"public","tags":[],"type":"number","defaultValue":"0","isStatic":false,"decorators":[]},{"name":"asyncRender","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>Signifies that the rendering requires asynchronous content to be fetched.\nSet this to false if you only need the component to render the content.</p></div>","lineNumber":100,"access":"public","tags":[],"type":"boolean","defaultValue":"true","isStatic":false,"decorators":[]},{"name":"fetchDataTask","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>ember-concurrency task that can be performed to fetch the required content.</p></div>","lineNumber":111,"access":"public","tags":[],"type":"task","isStatic":false,"decorators":[]},{"name":"queryParams","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>Queryparams required for fetching data. This is used as the first argument for fetchDataTask.</p></div>","lineNumber":120,"access":"public","tags":[],"type":"object","isStatic":false,"decorators":[]},{"name":"taskOptions","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>Additional options required for fetchDataTask. This is the second argument while performing it.</p></div>","lineNumber":129,"access":"public","tags":[],"type":"any","isStatic":false,"decorators":[]},{"name":"renderCallback","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>A callback function to be executed after rendering is complete.</p></div>","lineNumber":137,"access":"public","tags":[],"type":"function","isStatic":false,"decorators":[]},{"name":"triggerOutOfOrder","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>Set this to true whenever you need to to trigger the task immediately out of its specific priority/order in the queue.</p></div>","lineNumber":148,"access":"public","tags":[],"type":"boolean","defaultValue":"false","isStatic":false,"decorators":[]},{"name":"renderImmediately","file":"@freshworks/ember-sequential-render/components/sequential-render","description":"<div class=\"docs-md\"><p>Set this to true whenever you need to to render the content immediately without any data fetch.</p></div>","lineNumber":158,"access":"public","tags":[],"type":"boolean","defaultValue":"false","isStatic":false,"decorators":[]}],"yields":[{"name":"hash","type":"Hash","description":""},{"name":"hash.content","type":"any","description":"The response from performing fetchDataTask."},{"name":"hash.isContentLoading","type":"boolean","description":"Flag to check the loading state of the data fetch."},{"name":"hash.render-content","type":"Component","description":"Block component used to render the content of the item.\n        Accepts loaderClass as an argument. This class can be used to style the subsequent loading states for the item."},{"name":"hash.loader-state","type":"Component","description":"Block component used to render the loading state of the item."}]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"@freshworks/ember-sequential-render/components/sequential-render","attributes":{"file":"@freshworks/ember-sequential-render/components/sequential-render","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"@freshworks/ember-sequential-render/components/sequential-render~sequential-render"}]}}},{"type":"class","id":"@freshworks/ember-sequential-render/services/render-states~render-states","attributes":{"name":"render-states","file":"@freshworks/ember-sequential-render/services/render-states","description":"<div class=\"docs-md\"><p>A service to control the render states of the application.\nIt maintains the render queue and the available priorities.</p></div>","lineNumber":5,"access":"public","tags":[{"name":"service","value":""}],"isInterface":false,"exportType":"default","decorators":[],"fields":[{"name":"renderLater","file":"@freshworks/ember-sequential-render/services/render-states","description":"<div class=\"docs-md\"><p>Flag to denote if the postrender callback has been executed.</p></div>","lineNumber":36,"access":"public","tags":[],"type":"boolean","isStatic":false,"decorators":[]}],"methods":[{"name":"resetRenderState","file":"@freshworks/ember-sequential-render/services/render-states","description":"<div class=\"docs-md\"><p>This can be used to reset the render state during transitions.</p>\n<p>   In routes/application.js,</p>\n<pre class=\"docs-md__code\"><code>   renderStates: service(),\n   actions: {\n     didTransition() {\n       get(this, &#39;renderStates&#39;).resetRenderState();\n     }\n   }</code></pre></div>","lineNumber":61,"access":"public","tags":[],"returns":null,"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"renderStateModified","file":"@freshworks/ember-sequential-render/services/render-states","description":"<div class=\"docs-md\"><p>This can be used to listen to any changes in the app renderState.</p>\n<p>   In routes/application.js,</p>\n<pre class=\"docs-md__code\"><code>   renderStates: service(),\n   setupController(controller) {\n     get(this, &#39;renderStates&#39;).on(&#39;renderStateModified&#39;, this.debugRenderEvent.bind(this));\n   }</code></pre></div>","lineNumber":131,"access":"public","tags":[],"returns":null,"params":[{"name":"options.renderState","type":"number","description":"The current priority being rendered in the application."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"registerPostRenderCallback","file":"@freshworks/ember-sequential-render/services/render-states","description":"<div class=\"docs-md\"><p>This can be used to bind post render callbacks, if any, for the app.\nThis will be executed once after the highest priority item is rendered.\nThis also allows for a fallback timeout, after which the callback is executed irrespective of any state.</p>\n<p>   In routes/application.js,</p>\n<pre class=\"docs-md__code\"><code>   renderStates: service(),\n   setupController(controller) {\n     get(this, &#39;renderStates&#39;).registerPostRenderCallback(this._postRenderCallback.bind(this), FALLBACK_TIMEOUT);\n   }</code></pre></div>","lineNumber":159,"access":"public","tags":[],"returns":null,"params":[{"name":"callback","type":"Function","description":"Callback function to be executed once post render."},{"name":"fallbackTimeout","type":"number","description":"time in milliseconds after which the callback will be executed irrespective of the current render state."}],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]},{"name":"performOncePostRender","file":"@freshworks/ember-sequential-render/services/render-states","description":"<div class=\"docs-md\"><p>performOncePostRender is called after the highest priority item is rendered for the first time\n  or after a given timeout as fallback.</p></div>","lineNumber":187,"access":"private","tags":[],"returns":null,"params":[],"isAsync":false,"isGenerator":false,"isStatic":false,"decorators":[]}],"accessors":[],"parentClassId":null},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"@freshworks/ember-sequential-render/services/render-states","attributes":{"file":"@freshworks/ember-sequential-render/services/render-states","functions":[],"variables":[]},"relationships":{"classes":{"data":[{"type":"class","id":"@freshworks/ember-sequential-render/services/render-states~render-states"}]},"components":{"data":[]}}}]}
